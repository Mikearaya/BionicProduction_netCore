// <auto-generated />
using System;
using BionicInventory.DataStore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BionicInventory.DataStore.Migrations
{
    [DbContext(typeof(DatabaseService))]
    [Migration("20180916182326_PMS_Migration")]
    partial class PMS_Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BionicInventory.Domain.Customers.Addresses.Address", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("City")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("city")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'Addis Ababa'");

                    b.Property<uint>("ClientId")
                        .HasColumnName("CLIENT_ID");

                    b.Property<string>("Country")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("country")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'Ethiopia'");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number")
                        .HasColumnType("varchar(13)");

                    b.Property<string>("SubCity")
                        .IsRequired()
                        .HasColumnName("sub_city")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .HasName("fk_ADDRESS_client_idx");

                    b.ToTable("ADDRESS");
                });

            modelBuilder.Entity("BionicInventory.Domain.Customers.Customer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MainPhone")
                        .IsRequired()
                        .HasColumnName("main_phone")
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Tin")
                        .HasColumnName("TIN")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Tin")
                        .IsUnique()
                        .HasName("TIN_UNIQUE");

                    b.ToTable("CUSTOMER");
                });

            modelBuilder.Entity("BionicInventory.Domain.Customers.PhoneNumbers.PhoneNumber", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<uint>("ClientId")
                        .HasColumnName("CLIENT_ID");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("number")
                        .HasColumnType("varchar(13)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .HasName("fk_PHONE_NUMBER_client_idx");

                    b.HasIndex("Number")
                        .IsUnique()
                        .HasName("number_UNIQUE");

                    b.ToTable("PHONE_NUMBER");
                });

            modelBuilder.Entity("BionicInventory.Domain.Customers.SocialMedias.SocialMedia", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnName("address")
                        .HasColumnType("varchar(45)");

                    b.Property<uint>("ClientId")
                        .HasColumnName("CLIENT_ID");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnName("site")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique()
                        .HasName("CLIENT_ID_UNIQUE");

                    b.ToTable("SOCIAL_MEDIA");
                });

            modelBuilder.Entity("BionicInventory.Domain.Employees.Employee", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("first_name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("last_name")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("EMPLOYEE");
                });

            modelBuilder.Entity("BionicInventory.Domain.FinishedProducts.FinishedProduct", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<uint>("OrderId")
                        .HasColumnName("ORDER_ID");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("int(11)");

                    b.Property<uint>("RecievedBy")
                        .HasColumnName("recieved_by");

                    b.Property<uint>("SubmittedBy")
                        .HasColumnName("submitted_by");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .HasName("fk_FINISHED_ORDER_id_idx");

                    b.HasIndex("RecievedBy")
                        .HasName("fk_FINISHED_PRODUCT_recieved_by_idx");

                    b.HasIndex("SubmittedBy")
                        .HasName("fk_FINISHED_PRODUCT_submitter_idx");

                    b.ToTable("FINISHED_PRODUCT");
                });

            modelBuilder.Entity("BionicInventory.Domain.Invoices.Invoice", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<double>("Amount")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<uint>("PurchaseOrderId")
                        .HasColumnName("PURCHASE_ORDER_ID");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseOrderId")
                        .IsUnique()
                        .HasName("PURCHASE_ORDER_ID_UNIQUE");

                    b.ToTable("INVOICE");
                });

            modelBuilder.Entity("BionicInventory.Domain.Invoices.InvoiceDetails.InvoiceDetail", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<DateTime?>("DateAddded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_addded")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<uint>("InventoryId")
                        .HasColumnName("INVENTORY_ID");

                    b.Property<uint>("InvoiceNo")
                        .HasColumnName("INVOICE_NO");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId")
                        .HasName("fk_SALE_DETAIL_INVENTORY_ID_idx");

                    b.HasIndex("InvoiceNo")
                        .HasName("fk_INVOICE_ID_idx");

                    b.ToTable("INVOICE_DETAIL");
                });

            modelBuilder.Entity("BionicInventory.Domain.Invoices.InvoicePayment.InvoicePayments", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<float>("Amount")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<uint>("InvoiceNo")
                        .HasColumnName("INVOICE_NO");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceNo")
                        .HasName("fk_INVOICE_PAYMENTS_INVOICE_idx");

                    b.ToTable("INVOICE_PAYMENTS");
                });

            modelBuilder.Entity("BionicInventory.Domain.Items.Item", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_update")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Photo")
                        .HasColumnName("photo");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnName("unit")
                        .HasColumnType("varchar(45)");

                    b.Property<float>("UnitCost")
                        .HasColumnName("unit_cost")
                        .HasColumnType("float");

                    b.Property<float>("Weight")
                        .HasColumnName("weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("code_UNIQUE");

                    b.ToTable("ITEM");
                });

            modelBuilder.Entity("BionicInventory.Domain.Items.ItemPrices.ItemPrice", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<string>("Currency");

                    b.Property<DateTime?>("DateAdded");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<uint>("ItemId");

                    b.Property<float>("Price");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemPrice");
                });

            modelBuilder.Entity("BionicInventory.Domain.ProductionOrders.ProductionOrder", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<DateTime?>("AddedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("added_on")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(50)");

                    b.Property<uint>("OrderedBy")
                        .HasColumnName("ordered_by");

                    b.Property<DateTime?>("UpdatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("updated_on")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.HasKey("Id");

                    b.HasIndex("OrderedBy")
                        .HasName("fk_PRODUCTION_ORDERED_BY_idx");

                    b.ToTable("PRODUCTION_ORDER");
                });

            modelBuilder.Entity("BionicInventory.Domain.ProductionOrders.ProductionOrderLists.ProductionOrderList", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<bool>("Complete")
                        .HasColumnName("complete");

                    b.Property<float>("CostPerItem")
                        .HasColumnName("cost_per_item");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime>("DueDate")
                        .HasColumnName("due_date")
                        .HasColumnType("datetime");

                    b.Property<uint>("ItemId")
                        .HasColumnName("ITEM_ID");

                    b.Property<uint>("ProductionOrderId")
                        .HasColumnName("PRODUCTION_ORDER_ID");

                    b.Property<uint>("Quantity")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .HasName("fk_IN_ORDER_LIST_item_idx");

                    b.HasIndex("ProductionOrderId")
                        .HasName("fk_IN_ORDER_LIST_id_idx");

                    b.ToTable("PRODUCTION_ORDER_LIST");
                });

            modelBuilder.Entity("BionicInventory.Domain.PurchaseOrders.PurchaseOrder", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<float?>("AddedPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("added_payment")
                        .HasDefaultValueSql("'0'");

                    b.Property<uint>("ClientId")
                        .HasColumnName("CLIENT_ID");

                    b.Property<DateTime?>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime>("DueDate")
                        .HasColumnName("due_date")
                        .HasColumnType("datetime");

                    b.Property<float>("InitialPayment")
                        .HasColumnName("initial_payment");

                    b.Property<DateTime>("IssuedOn")
                        .HasColumnName("issued_on")
                        .HasColumnType("datetime");

                    b.Property<float>("PaymentAmount")
                        .HasColumnName("payment_amount");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .HasName("fk_PURCHASE_ORDER_customer_idx");

                    b.ToTable("PURCHASE_ORDER");
                });

            modelBuilder.Entity("BionicInventory.Domain.PurchaseOrders.PurchaseOrderDetails.PurchaseOrderDetail", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<float?>("AddedPricePerItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("added_price_per_item")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("date_added")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<DateTime?>("DateUpdated")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnName("date_updated")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'CURRENT_TIMESTAMP'");

                    b.Property<uint>("ItemId")
                        .HasColumnName("ITEM_ID");

                    b.Property<float>("PricePerItem")
                        .HasColumnName("price_per_item");

                    b.Property<uint>("PurchaseOrderId")
                        .HasColumnName("PURCHASE_ORDER_ID");

                    b.Property<uint>("Quantity")
                        .HasColumnName("quantity");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .HasName("fk_OUT_ORDER_LIST_item_idx");

                    b.HasIndex("PurchaseOrderId")
                        .HasName("fk_OUT_ORDER_LIST_order_idx");

                    b.ToTable("PURCHASE_ORDER_DETAIL");
                });

            modelBuilder.Entity("BionicInventory.Domain.Customers.Addresses.Address", b =>
                {
                    b.HasOne("BionicInventory.Domain.Customers.Customer", "Client")
                        .WithMany("Address")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_ADDRESS_client")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.Customers.PhoneNumbers.PhoneNumber", b =>
                {
                    b.HasOne("BionicInventory.Domain.Customers.Customer", "Client")
                        .WithMany("PhoneNumber")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_PHONE_NUMBER_client")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.Customers.SocialMedias.SocialMedia", b =>
                {
                    b.HasOne("BionicInventory.Domain.Customers.Customer", "Client")
                        .WithOne("SocialMedia")
                        .HasForeignKey("BionicInventory.Domain.Customers.SocialMedias.SocialMedia", "ClientId")
                        .HasConstraintName("fk_SOCIAL_MEDIA_client")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.FinishedProducts.FinishedProduct", b =>
                {
                    b.HasOne("BionicInventory.Domain.ProductionOrders.ProductionOrderLists.ProductionOrderList", "Order")
                        .WithMany("FinishedProduct")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("fk_FINISHED_ORDER_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BionicInventory.Domain.Employees.Employee", "RecievedByNavigation")
                        .WithMany("FinishedProductRecievedByNavigation")
                        .HasForeignKey("RecievedBy")
                        .HasConstraintName("fk_FINISHED_PRODUCT_recieved_by");

                    b.HasOne("BionicInventory.Domain.Employees.Employee", "SubmittedByNavigation")
                        .WithMany("FinishedProductSubmittedByNavigation")
                        .HasForeignKey("SubmittedBy")
                        .HasConstraintName("fk_FINISHED_PRODUCT_submitter");
                });

            modelBuilder.Entity("BionicInventory.Domain.Invoices.Invoice", b =>
                {
                    b.HasOne("BionicInventory.Domain.PurchaseOrders.PurchaseOrder", "PurchaseOrder")
                        .WithOne("Invoice")
                        .HasForeignKey("BionicInventory.Domain.Invoices.Invoice", "PurchaseOrderId")
                        .HasConstraintName("fk_INVOICE_PO_ID");
                });

            modelBuilder.Entity("BionicInventory.Domain.Invoices.InvoiceDetails.InvoiceDetail", b =>
                {
                    b.HasOne("BionicInventory.Domain.FinishedProducts.FinishedProduct", "Inventory")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("InventoryId")
                        .HasConstraintName("fk_SALE_DETAIL_INVENTORY_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BionicInventory.Domain.Invoices.Invoice", "InvoiceNoNavigation")
                        .WithMany("InvoiceDetail")
                        .HasForeignKey("InvoiceNo")
                        .HasConstraintName("fk_INVOICE_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.Invoices.InvoicePayment.InvoicePayments", b =>
                {
                    b.HasOne("BionicInventory.Domain.Invoices.Invoice", "InvoiceNoNavigation")
                        .WithMany("InvoicePayments")
                        .HasForeignKey("InvoiceNo")
                        .HasConstraintName("fk_INVOICE_PAYMENTS_INVOICE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.Items.ItemPrices.ItemPrice", b =>
                {
                    b.HasOne("BionicInventory.Domain.Items.Item", "Item")
                        .WithMany("ItemPrice")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.ProductionOrders.ProductionOrder", b =>
                {
                    b.HasOne("BionicInventory.Domain.Employees.Employee", "Employee")
                        .WithMany("ProductionOrderOrderedByNavigation")
                        .HasForeignKey("OrderedBy")
                        .HasConstraintName("fk_PRODUCTION_ORDERED_BY")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.ProductionOrders.ProductionOrderLists.ProductionOrderList", b =>
                {
                    b.HasOne("BionicInventory.Domain.Items.Item", "Item")
                        .WithMany("ProductionOrderList")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("fk_IN_ORDER_LIST_item")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BionicInventory.Domain.ProductionOrders.ProductionOrder", "ProductionOrder")
                        .WithMany("ProductionOrderList")
                        .HasForeignKey("ProductionOrderId")
                        .HasConstraintName("fk_IN_ORDER_LIST_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.PurchaseOrders.PurchaseOrder", b =>
                {
                    b.HasOne("BionicInventory.Domain.Customers.Customer", "Client")
                        .WithMany("PurchaseOrder")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("fk_PURCHASE_ORDER_customer")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BionicInventory.Domain.PurchaseOrders.PurchaseOrderDetails.PurchaseOrderDetail", b =>
                {
                    b.HasOne("BionicInventory.Domain.Items.Item", "Item")
                        .WithMany("PurchaseOrderDetail")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("fk_OUT_ORDER_LIST_item")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BionicInventory.Domain.PurchaseOrders.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetail")
                        .HasForeignKey("PurchaseOrderId")
                        .HasConstraintName("fk_PURCHASE_ORDER_PO_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
